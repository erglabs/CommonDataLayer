use anyhow::Result;
use itertools::Itertools;
use xshell::cmd;

pub fn codegen(protos: &[&str]) -> Result<()> {
    println!("codegen: {:#?}", protos);
    println!("> cd crates/rpc");
    let cwd = std::env::current_dir()?;
    std::env::set_current_dir(cwd.join("crates/rpc/"))?;

    println!("> rm -R src/codegen");
    cmd!("rm -R src/codegen").read()?;

    println!("> mkdir src/codegen");
    cmd!("mkdir src/codegen").read()?;

    println!("build protos");
    tonic_build::configure()
        .out_dir("src/codegen")
        .compile(protos, &["proto/"])?;

    let files = xshell::read_dir("src/codegen")?;

    let mods = files
        .iter()
        .filter_map(|file| file.file_name())
        .filter_map(|filename| filename.to_str())
        .filter(|filename| *filename != "mod.rs")
        .map(|filename| filename.trim_end_matches(".rs"))
        .map(|name| format!("pub mod {};", name))
        .join("\n");

    println!("write src/codegen/mod.rs");
    xshell::write_file(
        "src/codegen/mod.rs",
        format!(
            r#"
// CAUTION: This module was automatically generated by `cargo xtask codegen`. Do not modify it.

{}"#,
            mods
        ),
    )?;

    println!("> cargo fmt");
    cmd!("cargo fmt").read()?;

    println!("cd ../../");
    std::env::set_current_dir(cwd)?;

    Ok(())
}
